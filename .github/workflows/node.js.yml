# #FRONTEND 
# name: Build React Files & Deploy to Ubuntu server

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js 20.x to Build
#       uses: actions/setup-node@v2
#       with:
#         node-version: 20.x
#         #cache: 'npm'
#     - run: npm install
#     - run: REACT_APP_STAGE=production
#     - run: CI=false npm run build
#     - name: ssh deploy on server
#       uses: easingthemes/ssh-deploy@v2.1.4
#       with:
#           host: ${{ secrets.HOST }}
#           port: ${{ secrets.PORT }}
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
#           run: |
#             cd /home/ibis/test-deployment
#             git pull origin master
#             npm install
#             npm run build
#             pm2 restart 2


name: Frontend CI/CD pipeline

on:
  push:
    branches: [ master ] # tells github to run this on any push to the repository

jobs:
  test: # names the job
    runs-on: ubuntu-latest # sets the version of linux we want to use, should be what you have on your server

    strategy:
      fail-fast: false # tells github to not run further steps if this one fails
      matrix:
        node-version: [20.x] # sets the version of node we want to use, should be what you have on your server

    steps:
      - uses: actions/checkout@v2 # fetches your commit to test it
      - name: Use Node.js ${{ matrix.node-version }} # names our step
        uses: actions/setup-node@v1 # downloads node and npm
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install # installs your dependencies
      - run: npm run build # builds your app
      # - run: npm test # runs your test suite
        env:
          CI: true # shows terminal output!

  deploy:
    runs-on: ubuntu-latest
    needs: test # this job depends on "test" having finished
    if: github.ref == 'refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to Local Server
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: 15.206.7.176
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}  
          port: 22       
          script: |
            # cd /home/ubuntu/test-deployment # we move into our app's folder
            # git pull origin master # we pull any changes from git
            # npm prune # we remove any unused dependencies
            # npm install # we install any missing dependencies
            # npm run build # we build our app
            # pm2 restart 2